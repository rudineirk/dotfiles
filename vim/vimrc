set rtp+=~/.local/lib/python3.5/site-packages/powerline/bindings/vim

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'
Plug 'Shougo/vimproc.vim'

Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'vim-scripts/gitignore'

Plug 'ctrlpvim/ctrlp.vim'
Plug 'majutsushi/tagbar'
Plug 'editorconfig/editorconfig-vim'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-commentary'
Plug 'ervandew/supertab'

Plug 'Valloric/YouCompleteMe', { 'do': './install.py --gocode-completer' }
Plug 'scrooloose/syntastic'
Plug 'Chiel92/vim-autoformat'

Plug 'mattn/emmet-vim'
Plug 'flowtype/vim-flow'

Plug 'alvan/vim-closetag'

Plug 'fisadev/vim-isort'
Plug 'davidhalter/jedi-vim'

Plug 'fatih/vim-go'

Plug 'w0ng/vim-hybrid'

call plug#end()

syntax on
filetype on
filetype plugin indent on
set clipboard=unnamedplus

if has('nvim')
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
else
  let g:rehash256 = 1
  set t_Co=256
endif

if has('gui_running')
  set guifont=Source\ Code\ Pro\ for\ Powerline\ Medium\ 11
endif

set background=dark
colorscheme hybrid

map <C-W>e :split<CR>
map <C-W>q :vsplit<CR>
map <C-t> :NERDTreeToggle<CR>
map <C-_> :Commentary<CR>
nmap <F8> :TagbarToggle<CR>
map <C-b> :CtrlPBuffer<CR>

set wildignore+=*/tmp/*,*/node_modules/*,*.so,*.swp,*.zip,*.gz,*.xz,*.tar

let loaded_netrwPlugin=1
let NERDTreeRespectWildIgnore=1
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree())

let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#sources#syntax#min_keyword_length = 3

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

let g:closetag_filenames = "*.html,*.template,*.jinja2"

let g:syntastic_json_checkers = ['jsonlint']
let g:syntastic_yaml_checkers = ['jsyaml']
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_python_checkers = ['python', 'pylint']
let g:syntastic_go_checkers = ['go', 'gofmt', 'golint']
let g:syntastic_sh_checkers = ['shellcheck']
let g:syntastic_rst_checkers = ['sphinx', 'rstcheck']

let g:syntastic_python_pylint_args = '--rcfile=.pylintrc'

let g:user_emmet_install_global = 0
autocmd FileType html,css EmmetInstall

autocmd bufwritepost *.py silent !isort %
set autoread

au BufWrite * :Autoformat
let g:formatdef_yapf = "'yapf'"
let g:formatters_python = ['yapf']
let g:autoformat_autoindent = 0
let g:autoformat_retab = 0
let g:autoformat_remove_trailing_spaces = 0
